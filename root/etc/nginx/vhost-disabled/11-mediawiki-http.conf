server {
  listen 80;
  expires $expires;
  include hardening.conf;
  access_log /proc/self/fd/1 main;
  error_log /proc/self/fd/2;
  root /var/www/html/default;

  location ~ /\.ht {
    deny  all;
  }

  location ~ ^/w/(index|load|api|thumb|opensearch_desc|rest|img_auth)\.php$ {
    fastcgi_split_path_info ^(.+?\.php)(/.*)$;
    if (!-f $document_root$fastcgi_script_name) {
      return 404;
    }

    # Mitigate https://httpoxy.org/ vulnerabilities
    fastcgi_param HTTP_PROXY "";

    fastcgi_pass localhost:9000;
    fastcgi_index index.php;
    include fastcgi_params.conf;
  }

  # Images
  location /w/images {
    # Separate location for images/ so .php execution won't apply
  }

  location /w/images/deleted {
    # Deny access to deleted images folder
    deny all;
  }

  # MediaWiki assets (usually images)
  location ~ ^/w/resources/(assets|lib|src) {
    try_files $uri 404;
    add_header Cache-Control "public";
    expires 7d;
  }

  # Assets, scripts and styles from skins and extensions
  location ~ ^/w/(skins|extensions)/.+\.(css|js|gif|jpg|jpeg|png|svg|wasm)$ {
    try_files $uri 404;
    add_header Cache-Control "public";
    expires 7d;
  }

  # Favicon
  location = /favicon.ico {
    alias /w/images/6/64/Favicon.ico;
    add_header Cache-Control "public";
    expires 7d;
  }

  # License and credits files
  location ~ ^/w/(COPYING|CREDITS) {
    default_type text/plain;
  }

  ## Uncomment the following code if you wish to use the installer/updater
  ## installer/updater
  #location /w/mw-config/ {
  #     # Do this inside of a location so it can be negated
  #     location ~ \.php$ {
  #             include /etc/nginx/fastcgi_params;
  #             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  #             fastcgi_pass 127.0.0.1:9000; # or whatever port your PHP-FPM listens on
  #     }
  #}

  # Handling for Mediawiki REST API, see [[mw:API:REST_API]]
  location /w/rest.php/ {
    try_files $uri $uri/ /w/rest.php?$query_string;
  }

  ## Uncomment the following code for handling image authentication
  ## Also add "deny all;" in the location for /w/images above
  #location /w/img_auth.php/ {
  #     try_files $uri $uri/ /w/img_auth.php?$query_string;
  #}

  # Handling for the article path (pretty URLs)
  location /wiki/ {
    rewrite ^/wiki/(?<pagename>.*)$ /w/index.php;
  }

  # Allow robots.txt in case you have one
  location = /robots.txt {
  }

  # Explicit access to the root website, redirect to main page (adapt as needed)
  location = / {
    return 307 /wiki/Main_Page;
  }

  # Every other entry point will be disallowed.
  # Add specific rules for other entry points/images as needed above this
  location / {
    return 404;
  }
                
}

server {
  listen 443 ssl;
  include ssl.conf;
  include hardening.conf;
  ssl_certificate /etc/pki/tls/certs/ca.crt;
  ssl_certificate_key /etc/pki/tls/private/ca.key;
  access_log /proc/self/fd/1 main;
  error_log /proc/self/fd/2;
  
  return 307 http://$host$request_uri;
}
